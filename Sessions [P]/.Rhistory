data <- data.frame(data)
colnames(data) <- dataNames
data.i <- data.frame()
for(i in 1:length(names(data))) {
data.i <- rbind(data.i,data.frame(name= rep(names(data)[i],nrow(data)) , value=data[,i]  ) )
}
data.i
getwd()
library(ggplot2)
library(raster)
library(rnaturalearth)
library(sf)
library(geosphere)
library(rgeos)
projection <- CRS("+proj=robin +over")
bb <- sf::st_union(sf::st_make_grid(
st_bbox(c(xmin = -180,
xmax = 180,
ymax = 90,
ymin = -90), crs = st_crs(4326)), n = 100))
bb <- st_transform(bb, projection)
mask <- raster()
extent(mask) <- extent(-180,180,-90,90)
res(mask) <- c(0.25,0.25)
mask[] <- 1
mask <- projectRaster(mask, crs = projection)
redsMain <- raster("/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Global Seaweed Area Estimates Mechanistic/Results/_ Backup/RedAlgae.tif")
redsMain <- aggregate(redsMain,30, fun=mean)
reds <- redsMain
reds[reds <= 0.5] <- NA
reds[reds > 0.5] <- 1
reds <- projectRaster(reds, crs = projection)
reds <- mask(reds, as(bb, "Spatial"))
reds <- as.data.frame(reds,xy=TRUE,na.rm=T)
colnames(reds) <- c("Lon","Lat","Val")
unique(reds$Val)
brownsMain <- raster("/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Global Seaweed Area Estimates Mechanistic/Results/Phaeophyceae/Decile BrownAlgaeBenthic.tif")
brownsMain <- aggregate(brownsMain,30, fun=mean)
browns <- brownsMain
browns[browns <= 0.5] <- NA
browns[browns > 0.5] <- 1
browns <- projectRaster(browns, crs = projection)
browns <- mask(browns, as(bb, "Spatial"))
browns <- as.data.frame(browns,xy=TRUE,na.rm=T)
colnames(browns) <- c("Lon","Lat","Val")
unique(browns$Val)
worldMap <- shapefile("/Volumes/Jellyfish/Dropbox/theMarineDataScientist/gitRepositories/dataVisualization/Projects/seaSurfaceOxygen/Data/LandMass Polygon.shp")
worldMap <- spTransform(worldMap, CRSobj = projection)
worldMap <- gBuffer(worldMap, byid=TRUE, width=0.001)
worldMap <- crop(worldMap, as(bb, "Spatial"))
rock <- shapefile("/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Rock/CliffPerTerrSimp2.shp")
percentage <- rock$CliffPerTe
percentage[percentage <= 0.7] <- 0
percentage[percentage > 0.7 & percentage <= 2.1] <- 2
percentage[percentage > 2.1 & percentage <= 8.2] <- 3
percentage[percentage > 8.2 & percentage <= 20] <- 4
percentage[percentage > 20 ] <- 5
percentage[percentage == 0] <- 1
unique(percentage)
#rock <- gBuffer(rock, byid=TRUE, width=1)
rock <- spTransform(rock, CRSobj = projection)
plot(rock)
rockRaster <- rasterize(as(rock, "SpatialPolygons"), mask, percentage)
rockRaster <- as.data.frame(rockRaster,xy=TRUE,na.rm=T)
colnames(rockRaster) <- c("Lon","Lat","Val")
rock
unique(percentage)
rock$percentage <- percentage
theme_map <-
theme(
text = element_text(family = "Helvetica", color = "#22211d"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_line(color = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#FFFFFF", color = NA),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.position="bottom",
legend.box = "horizontal",
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-10,-10,-10,-10),
legend.key.height= unit(0.25, 'cm'),
legend.key.width= unit(0.75, 'cm') )
rock$percentage
myColors[rock$percentage]
myColors <- c("#900BAB","#DC3333","#42AE57","#6FBBE8","#0D66B3")
plot1 <- ggplot() +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_tile(data = rock, aes(x=Lon,y=Lat,fill=factor(Val))) +
geom_polygon(data = rock, aes(x = long, y = lat, group = group,fill=factor(percentage)), size=0.25 ) +
scale_fill_manual(guide = guide_legend(title="Rocky substrate [%]", direction = "horizontal", title.position = "top", title.hjust = 0.5) , values = myColors[rock$percentage], labels=c("0-0.7","0.7-2.1","2.1-8.2","8.2-20.0","20.0-73.6"), na.value='transparent') +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot1
plot1 <- ggplot() +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_polygon(data = rock, aes(x = long, y = lat, group = group,fill=factor(percentage)), size=0.25 ) +
scale_fill_manual(guide = guide_legend(title="Rocky substrate [%]", direction = "horizontal", title.position = "top", title.hjust = 0.5) , values = myColors[rock$percentage], labels=c("0-0.7","0.7-2.1","2.1-8.2","8.2-20.0","20.0-73.6"), na.value='transparent') +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot1
rock_df <- fortify(rock)
head(rock_df)
unqiue(rock_df$id)
unique(rock_df$id)
nrow(rock)
rock$percentage
rock$percentage[as.numeric(rock_df$id) + 1]
rock_df$percentage <- rock$percentage[as.numeric(rock_df$id) + 1]
unque(rock_df$percentage)
unique(rock_df$percentage)
plot1 <- ggplot() +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_polygon(data = rock, aes(x = long, y = lat, group = group,fill=factor(percentage)), size=0.25 ) +
scale_fill_manual(guide = guide_legend(title="Rocky substrate [%]", direction = "horizontal", title.position = "top", title.hjust = 0.5) , values = myColors[rock_df$percentage], labels=c("0-0.7","0.7-2.1","2.1-8.2","8.2-20.0","20.0-73.6"), na.value='transparent') +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot1
nrow(rock)
plot1 <- ggplot() +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_polygon(data = rock_df, aes(x = long, y = lat, group = group,fill=factor(percentage)), size=0.25 ) +
scale_fill_manual(guide = guide_legend(title="Rocky substrate [%]", direction = "horizontal", title.position = "top", title.hjust = 0.5) , values = myColors[rock_df$percentage], labels=c("0-0.7","0.7-2.1","2.1-8.2","8.2-20.0","20.0-73.6"), na.value='transparent') +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot1
unique(myColors[rock_df$percentage])
plot1 <- ggplot() +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_polygon(data = rock_df, aes(x = long, y = lat, group = group,fill=factor(percentage)), size=0.25, fill=myColors[rock_df$percentage], colour=myColors[rock_df$percentage] ) +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot1
plot1 <- ggplot() +
geom_polygon(data = rock_df, aes(x = long, y = lat, group = group,fill=factor(percentage)), size=0.25, fill=myColors[rock_df$percentage], colour=myColors[rock_df$percentage] ) +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot1
plot1
plot2 <- ggplot() +
geom_polygon(data = worldMap, aes(x = long, y = lat, group = group), fill="#C7C7C7", colour = "#C7C7C7" , size=0.25 ) +
geom_tile(data = reds, aes(x=Lon,y=Lat,fill=factor(Val)), fill="#DC3333") +
geom_tile(data = browns, aes(x=Lon,y=Lat,fill=factor(Val)), fill="#42AE57") +
geom_sf(data = bb,fill=NA, colour = "white" , linetype='solid', size=2 ) +
theme_map
plot2
getwd()
plot2
library(gridExtra)
figure <- grid.arrange(plot2, plot1, nrow = 2, ncol = 1)
figure
figure <- ggarrange(plot2, plot1,
labels = c("A", "B"),
ncol = 1, nrow = 2)
pdf(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.pdf",height=12,width=10)
figure
dev.off()
figure <- grid.arrange(plot2, plot1, nrow = 2, ncol = 1)
figure
pdf(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.pdf",height=12,width=10)
figure
dev.off()
figure <- grid.arrange(plot2, plot1, nrow = 2, ncol = 1)
pdf(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.pdf",height=12,width=10)
figure
dev.off()
pdf(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.pdf",height=12,width=10)
print(figure)
dev.off()
dev.off()
pdf(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.pdf",height=12,width=10)
print(figure)
dev.off()
figure <- ggarrange(plot2, plot1,
labels = c("A", "B"),
ncol = 1, nrow = 2)
??ggarrange
library(ggpub)
library(ggpubr)
figure <- ggarrange(plot2, plot1,
labels = c("A", "B"),
ncol = 1, nrow = 2)
figure
pdf(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.pdf",height=12,width=10)
figure
dev.off()
png(file="/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Figure.png",height=3000,width=3000)
figure
dev.off()
a <- raster("/Volumes/Jellyfish/Dropbox/Manuscripts/_ Under Revision/Global Estimates of the Extent of Algal Forests/Global Seaweed Area Estimates Niche Model/Results/EnsembleReclass.tif")
sum(getValues(raster::area(a) * a),na.rm=T)
3444250 * 0.52
rm(list=(ls()[ls()!="v"]))
gc(reset=TRUE)
library(stats)
inds <- seq(as.Date("2014-06-01"), as.Date("2015-10-14"), by = "day")
inds
as.numeric(format(inds[1], "%j"))
install.packages("sdmpredictors")
library(sdmpredictors)
maximumThermalConditions <- load_layers("BO2_tempmax_ss")
maximumThermalConditions
plot(maximumThermalConditions)
maximumThermalConditions
library(raster)
library(raster)
plot(maximumThermalConditions)
sourve("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
cat("All packages are correctly installed and loaded")
cat("All packages are correctly installed and loaded")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
install.packages("SDMtune")
install.packages("SDMtune")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
detach("dismo")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
remove.packages("SDMtune")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
install.packages(package)
install.packages(package, type = "source")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
source("https://raw.githubusercontent.com/jorgeassis/courseMarineEcologicalModelling/master/Sessions%20%5BP%5D/sourceFunctions.R")
library(rWind)
uv2ds(1, 1)
uv2ds(1, 1)
library(raster)
file <- "/Volumes/Jellyfish/Dropbox/Manuscripts/Bio-ORACLE Across Climate Changes/Bioclimatic Layers BO3.0/Present/Surface/LongTerm/SeaWaterVelocityY Surface Pred Mean.tif"
file <- raster(file)
file
file2 <- "/Volumes/Jellyfish/Dropbox/SeaWaterDirection Surface Mean 2010-2020.tif"
raster(file2)
file <- "/Volumes/Jellyfish/Dropbox/Manuscripts/Bio-ORACLE Across Climate Changes/Bioclimatic Layers BO3.0/Present/Surface/LongTerm/SeaWaterVelocityY Surface Pred Mean.tif"
fileR <- raster(file)
file2 <- "/Volumes/Jellyfish/Dropbox/SeaWaterDirection Surface Mean 2010-2020.tif"
file2R <-raster(file2)
?resample
fileFR <- resample(file2R,fileR)
plot(fileFR)
fileFR
plot(file2R)
plot(fileR)
writeRaster(fileFR,file=file2, format="GTiff", overwrite=TRUE)
file <- "/Volumes/Jellyfish/Dropbox/Manuscripts/Bio-ORACLE Across Climate Changes/Bioclimatic Layers BO3.0/Present/Surface/LongTerm/SeaWaterVelocityY Surface Pred Mean.tif"
fileR <- raster(file)
file2 <- "/Volumes/Jellyfish/Dropbox/SeaWaterSpeed Surface Mean 2010-2020.tif"
file2R <-raster(file2)
fileFR <- resample(file2R,fileR)
writeRaster(fileFR,file=file2, format="GTiff", overwrite=TRUE)
file <- "/Volumes/Jellyfish/Dropbox/Manuscripts/Bio-ORACLE Across Climate Changes/Bioclimatic Layers BO3.0/Present/Surface/LongTerm/SeaWaterVelocityY Surface Pred Mean.tif"
fileR <- raster(file)
file2 <- "/Volumes/Jellyfish/Dropbox/WindDirection Surface Mean 2010-2020.tif"
file2R <-raster(file2)
fileFR <- resample(file2R,fileR)
writeRaster(fileFR,file=file2, format="GTiff", overwrite=TRUE)
file <- "/Volumes/Jellyfish/Dropbox/Manuscripts/Bio-ORACLE Across Climate Changes/Bioclimatic Layers BO3.0/Present/Surface/LongTerm/SeaWaterVelocityY Surface Pred Mean.tif"
fileR <- raster(file)
file2 <- "/Volumes/Jellyfish/Dropbox/WindSpeed Surface Mean 2010-2020.tif"
file2R <-raster(file2)
fileFR <- resample(file2R,fileR)
writeRaster(fileFR,file=file2, format="GTiff", overwrite=TRUE)
list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species")
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files
grepl("Maps/Global/",files)]
files <- files[grepl("Maps/Global/",files)]
files
files <- files[!grepl("Maps/Global/SD_",files)]
files
files
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
f = files[1]
f
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of marine forests in a changing climate/Data/"
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species/Acrocarpia paniculata/Maps/Global/",
dump,
f)
f.to
dump
f
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/Acrocarpia paniculata/Maps/Global/",
dump,
f)
f.to
file.copy(f,f.to)
?file.copy
file.copy(f,f.to,opy.mode = TRUE)
file.copy(f,f.to,copy.mode = TRUE)
f
raster(f)
library(raster)
raster(f)
f.to
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of marine forests in a changing climate/Data/Distribution Models/"
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/Acrocarpia paniculata/Maps/Global/",
dump,
f)
file.copy(f,f.to,copy.mode = TRUE)
files
file.copy(f,f.to,copy.mode = TRUE, overwrite=TRUE)
file.copy(f,f.to,copy.mode = TRUE, overwrite=TRUE, recursive=T
}
file.copy(f,f.to,copy.mode = TRUE, overwrite=TRUE, recursive=T)
file.copy(f,f.to,copy.mode = TRUE, overwrite=TRUE, recursive=TRUE)
file.copy(f,f.to,copy.mode = TRUE, overwrite=TRUE)
file.copy(f,f.to,copy.mode = TRUE, overwrite=TRUE)
f.to
raster(f.to)
file.copy(f,f.to, overwrite=TRUE)
raster(f.to)
system(paste0("cp -R ",f," ",f.to)
file.copy(f,f.to, overwrite=TRUE)
}
system(paste0("cp -R ",f," ",f.to))
paste0("cp -R ",f," ",f.to)
system(paste0("cp -R '",f,"' '",f.to,"'"))
raster(f.to)
plot(raster(f.to))
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to
gsub("/Maps/Global/","/",f.to)
f.to <- gsub("/Maps/Global/","/",f.to)
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of marine forests in a changing climate/Data/Distribution Models/"
f <- files[1]
f
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to <- gsub("/Maps/Global/","/",f.to)
system(paste0("cp -R '",f,"' '",f.to,"'"))
f.to
system(paste0("cp -Rv '",f,"' '",f.to,"'"))
f.to
gregexpr("/",f.to)
unlist(gregexpr("/",f.to))
substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
f.to.folder <- substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
paste0("mkdir '",f.to.folder,"'")
system(paste0("mkdir '",f.to.folder,"'"))
f.to
system(paste0("cp -R '",f,"' '",f.to,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
raster(f.to)
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of marine forests in a changing climate/Data/Distribution Models/"
for( f in files ) {
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to <- gsub("/Maps/Global/","/",f.to)
f.to.folder <- substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
system(paste0("mkdir '",f.to.folder,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
}
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
files
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of marine forests in a changing climate/Data/Distribution Models/"
for( f in files ) {
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to <- gsub("/Maps/Global/","/",f.to)
f.to.folder <- substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
system(paste0("mkdir '",f.to.folder,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
}
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files
files <- files[!grepl("GainLoss",files)]
files
files <- files[!grepl("Maps/Global/SD_",files)]
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files <- files[!grepl("GainLoss",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of marine forests in a changing climate/Data/Distribution Models/"
for( f in files ) {
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of marine forests/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to <- gsub("/Maps/Global/","/",f.to)
f.to.folder <- substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
system(paste0("mkdir '",f.to.folder,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
}
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of seagrasses/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files <- files[!grepl("GainLoss",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
files
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of seagrass forests in a changing climate/Data/Distribution Models/"
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of seagrasses/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files <- files[!grepl("GainLoss",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of seagrass forests in a changing climate/Data/Distribution Models/"
for( f in files ) {
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of seagrasses/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to <- gsub("/Maps/Global/","/",f.to)
f.to.folder <- substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
system(paste0("mkdir '",f.to.folder,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
}
files <- list.files("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of seagrasses/Results [Full models]/_ Per Species", recursive = T, full.names = T)
files <- files[grepl("Maps/Global/",files)]
files <- files[grepl("Reclass",files)]
files <- files[!grepl("Reachable_",files)]
files <- files[!grepl("GainLoss",files)]
files <- files[!grepl("Maps/Global/SD_",files)]
dump <- "/Volumes/Jellyfish2/Backup [Ongoing studies]/Future diversity of seagrass forests in a changing climate/Data/Distribution Models/"
for( f in files ) {
f.to <- gsub("/Volumes/Jellyfish/Dropbox/Data/Distribution Models/Global distribution of seagrasses/Results \\[Full models]\\/_ Per Species/",
dump,
f)
f.to <- gsub("/Maps/Global/","/",f.to)
f.to.folder <- substr(f.to,1,unlist(gregexpr("/",f.to))[length(unlist(gregexpr("/",f.to)))])
system(paste0("mkdir '",f.to.folder,"'"))
system(paste0("cp -R '",f,"' '",f.to,"'"))
}
remove.packages("rmapshaper")
library("colorspace")
pal <- choose_palette()
pal
pal <- choose_palette()
pal()
pal <- choose_palette()
pal
pal <- choose_palette()
pal
remotes::install_github("raquamaps/aquamapsdata", dependencies = TRUE)
library(aquamapsdata)
remotes::install_github("raquamaps/aquamapsdata", dependencies = FALSE)
install.packages("rcrypt")
remotes::install_github("raquamaps/aquamapsdata", dependencies = FALSE)
install.packages("~/Downloads/rcrypt_0.1.1.tar", repos = NULL)
install.packages("~/Downloads/rcrypt_0.1.1.tar")
remotes::install_github("raquamaps/aquamapsdata", dependencies = FALSE)
install.packages("~/Downloads/rcrypt_0.1.0.tar")
setwd("/Volumes/StingRay/Dropbox/Tutoring/Classes & Courses/MarAfrica, modelling the distribution of biodiversity and climate change/Git/courseMarAfrica/Sessions [P]")
source(″sourceFunctions.R″)
source(“sourceFunctions.R“)
source("sourceFunctions.R")
getwd()
world <- shapefile("Data/vectorShapefiles/globalLandmass/world.shp")
distributionRecords <- read.table("Data/dataBases/MergedCoordinates.csv", sep = ";", header = TRUE)
plot(world)
plot(records)
plot(distributionRecords)
plot(world)
points(distributionRecords, col="red")
world <- shapefile("Data/vectorShapefiles/globalLandmass/world.shp")
regionAzores <- extent(-36, -18, 34, 42)
azores <- crop(world,regionAzores)
plot(azores)
plot(azores, axes=TRUE)
plot(azores, axes=TRUE)
SST <- raster("Data/rasterLayers/Climate/Present/OceanTemperature Surface Pred Mean.tif")
plot(SST, main ="Sea Surface Temperatures")
presentSST <- raster("Data/rasterLayers/Climate/Present/OceanTemperature Surface Pred Mean.tif")
westAfricaExtent <- extent(-30, 22, -37.5, 36)
presentSSTWAfrica <- crop(presentSST,westAfricaExtent)
plot(presentSSTWAfrica, main="West Africa warming" )
